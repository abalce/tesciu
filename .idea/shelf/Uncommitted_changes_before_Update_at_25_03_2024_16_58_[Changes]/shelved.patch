Index: app/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    alias(libs.plugins.androidApplication)\r\n    alias(libs.plugins.jetbrainsKotlinAndroid)\r\n    id(\"com.google.gms.google-services\")\r\n}\r\n\r\nandroid {\r\n    namespace = \"com.example.studysorter\"\r\n    compileSdk = 34\r\n\r\n    defaultConfig {\r\n        applicationId = \"com.example.studysorter\"\r\n        minSdk = 24\r\n        targetSdk = 34\r\n        versionCode = 1\r\n        versionName = \"1.0\"\r\n\r\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            isMinifyEnabled = false\r\n            proguardFiles(\r\n                getDefaultProguardFile(\"proguard-android-optimize.txt\"),\r\n                \"proguard-rules.pro\"\r\n            )\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = JavaVersion.VERSION_1_8\r\n        targetCompatibility = JavaVersion.VERSION_1_8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = \"1.8\"\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation(libs.androidx.core.ktx)\r\n    implementation(libs.androidx.appcompat)\r\n    implementation(libs.material)\r\n    implementation(libs.androidx.activity)\r\n    implementation(libs.androidx.constraintlayout)\r\n    implementation(libs.firebase.auth)\r\n    testImplementation(libs.junit)\r\n    androidTestImplementation(libs.androidx.junit)\r\n    androidTestImplementation(libs.androidx.espresso.core)\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle.kts b/app/build.gradle.kts
--- a/app/build.gradle.kts	(revision 61ab3ed07484b71ae11425dfc2812d8a1a8c92e6)
+++ b/app/build.gradle.kts	(date 1711324242503)
@@ -16,6 +16,9 @@
         versionName = "1.0"
 
         testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
+        vectorDrawables {
+            useSupportLibrary = true
+        }
     }
 
     buildTypes {
@@ -34,6 +37,17 @@
     kotlinOptions {
         jvmTarget = "1.8"
     }
+    buildFeatures {
+        compose = true
+    }
+    composeOptions {
+        kotlinCompilerExtensionVersion = "1.5.1"
+    }
+    packaging {
+        resources {
+            excludes += "/META-INF/{AL2.0,LGPL2.1}"
+        }
+    }
 }
 
 dependencies {
@@ -44,7 +58,20 @@
     implementation(libs.androidx.activity)
     implementation(libs.androidx.constraintlayout)
     implementation(libs.firebase.auth)
+    implementation(libs.androidx.lifecycle.runtime.ktx)
+    implementation(libs.androidx.activity.compose)
+    implementation(platform(libs.androidx.compose.bom))
+    implementation(libs.androidx.ui)
+    implementation(libs.androidx.ui.graphics)
+    implementation(libs.androidx.ui.tooling.preview)
+    implementation(libs.androidx.material3)
     testImplementation(libs.junit)
     androidTestImplementation(libs.androidx.junit)
     androidTestImplementation(libs.androidx.espresso.core)
+    androidTestImplementation(platform(libs.androidx.compose.bom))
+    androidTestImplementation(libs.androidx.ui.test.junit4)
+    debugImplementation(libs.androidx.ui.tooling)
+    debugImplementation(libs.androidx.ui.test.manifest)
+    implementation ("androidx.compose.material:material-icons-extended:$1.5.1")
+
 }
\ No newline at end of file
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\r\n    <string name=\"app_name\">Study sorter</string>\r\n    <string name=\"powitanie\">Witaj w aplikacji</string>\r\n    <string name=\"mail\">Email</string>\r\n    <string name=\"haslo\">Hasło</string>\r\n    <string name=\"zaloguj\">Zaloguj</string>\r\n    <string name=\"rejestracja\">Rejestracja</string>\r\n    <string name=\"zarejestruj\">Zarejestruj</string>\r\n    <string name=\"teskt_Rejestracja\">podaj swoje dane</string>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	(revision 61ab3ed07484b71ae11425dfc2812d8a1a8c92e6)
+++ b/app/src/main/res/values/strings.xml	(date 1711326686736)
@@ -3,8 +3,9 @@
     <string name="powitanie">Witaj w aplikacji</string>
     <string name="mail">Email</string>
     <string name="haslo">Hasło</string>
-    <string name="zaloguj">Zaloguj</string>
+    <string name="zaloguj">Zaloguj się</string>
     <string name="rejestracja">Rejestracja</string>
     <string name="zarejestruj">Zarejestruj</string>
     <string name="teskt_Rejestracja">podaj swoje dane</string>
+    <string name="title_activity_main2">MainActivity2</string>
 </resources>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1711316379344)
+++ b/.idea/vcs.xml	(date 1711316379344)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.StudySorter\"\r\n        tools:targetApi=\"31\">\r\n        <activity\r\n            android:name=\".Rejestracja\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".Logowanie\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"false\"></activity>\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision 61ab3ed07484b71ae11425dfc2812d8a1a8c92e6)
+++ b/app/src/main/AndroidManifest.xml	(date 1711286217541)
@@ -13,6 +13,11 @@
         android:theme="@style/Theme.StudySorter"
         tools:targetApi="31">
         <activity
+            android:name=".MainActivity2"
+            android:exported="false"
+            android:label="@string/title_activity_main2"
+            android:theme="@style/Theme.StudySorter" />
+        <activity
             android:name=".Rejestracja"
             android:exported="false" />
         <activity
@@ -26,7 +31,7 @@
         </activity>
         <activity
             android:name=".MainActivity"
-            android:exported="false"></activity>
+            android:exported="false" />
     </application>
 
 </manifest>
\ No newline at end of file
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"gradleJvm\" value=\"#GRADLE_LOCAL_JAVA_HOME\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveExternalAnnotations\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
--- a/.idea/gradle.xml	(revision 61ab3ed07484b71ae11425dfc2812d8a1a8c92e6)
+++ b/.idea/gradle.xml	(date 1711316379319)
@@ -1,5 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="GradleMigrationSettings" migrationVersion="1" />
   <component name="GradleSettings">
     <option name="linkedExternalProjectsSettings">
       <GradleProjectSettings>
Index: gradle/libs.versions.toml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[versions]\r\nagp = \"8.3.0\"\r\nkotlin = \"1.9.0\"\r\ncoreKtx = \"1.12.0\"\r\njunit = \"4.13.2\"\r\njunitVersion = \"1.1.5\"\r\nespressoCore = \"3.5.1\"\r\nappcompat = \"1.6.1\"\r\nmaterial = \"1.11.0\"\r\nactivity = \"1.8.0\"\r\nconstraintlayout = \"2.1.4\"\r\ngoogleServices = \"4.4.1\"\r\nfirebaseAuth = \"22.3.1\"\r\n\r\n[libraries]\r\nandroidx-core-ktx = { group = \"androidx.core\", name = \"core-ktx\", version.ref = \"coreKtx\" }\r\njunit = { group = \"junit\", name = \"junit\", version.ref = \"junit\" }\r\nandroidx-junit = { group = \"androidx.test.ext\", name = \"junit\", version.ref = \"junitVersion\" }\r\nandroidx-espresso-core = { group = \"androidx.test.espresso\", name = \"espresso-core\", version.ref = \"espressoCore\" }\r\nandroidx-appcompat = { group = \"androidx.appcompat\", name = \"appcompat\", version.ref = \"appcompat\" }\r\nmaterial = { group = \"com.google.android.material\", name = \"material\", version.ref = \"material\" }\r\nandroidx-activity = { group = \"androidx.activity\", name = \"activity\", version.ref = \"activity\" }\r\nandroidx-constraintlayout = { group = \"androidx.constraintlayout\", name = \"constraintlayout\", version.ref = \"constraintlayout\" }\r\ngoogle-services = { group = \"com.google.gms\", name = \"google-services\", version.ref = \"googleServices\" }\r\nfirebase-auth = { group = \"com.google.firebase\", name = \"firebase-auth\", version.ref = \"firebaseAuth\" }\r\n\r\n[plugins]\r\nandroidApplication = { id = \"com.android.application\", version.ref = \"agp\" }\r\njetbrainsKotlinAndroid = { id = \"org.jetbrains.kotlin.android\", version.ref = \"kotlin\" }\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
--- a/gradle/libs.versions.toml	(revision 61ab3ed07484b71ae11425dfc2812d8a1a8c92e6)
+++ b/gradle/libs.versions.toml	(date 1711286217320)
@@ -11,6 +11,9 @@
 constraintlayout = "2.1.4"
 googleServices = "4.4.1"
 firebaseAuth = "22.3.1"
+lifecycleRuntimeKtx = "2.7.0"
+activityCompose = "1.8.2"
+composeBom = "2023.08.00"
 
 [libraries]
 androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
@@ -23,6 +26,16 @@
 androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" }
 google-services = { group = "com.google.gms", name = "google-services", version.ref = "googleServices" }
 firebase-auth = { group = "com.google.firebase", name = "firebase-auth", version.ref = "firebaseAuth" }
+androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
+androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
+androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
+androidx-ui = { group = "androidx.compose.ui", name = "ui" }
+androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
+androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
+androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
+androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
+androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
+androidx-material3 = { group = "androidx.compose.material3", name = "material3" }
 
 [plugins]
 androidApplication = { id = "com.android.application", version.ref = "agp" }
Index: app/src/main/res/layout/activity_logowanie.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/main\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@color/tlo_aplikacja\"\r\n    tools:context=\".Logowanie\">\r\n\r\n    <TextView\r\n\r\n        android:id=\"@+id/powitanie\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"246dp\"\r\n        android:fontFamily=\"monospace\"\r\n        android:text=\"@string/powitanie\"\r\n        android:textSize=\"20sp\"\r\n\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/nazwa_aplikacji\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"16dp\"\r\n        android:elegantTextHeight=\"true\"\r\n        android:fontFamily=\"casual\"\r\n        android:text=\"@string/app_name\"\r\n        android:textAlignment=\"center\"\r\n        android:textSize=\"24sp\"\r\n        android:textStyle=\"bold\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/powitanie\" />\r\n\r\n    <EditText\r\n        android:id=\"@+id/Email_Logowanie\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"32dp\"\r\n        android:ems=\"10\"\r\n        android:hint=\"@string/mail\"\r\n        android:inputType=\"textEmailAddress\"\r\n        android:textSize=\"24sp\"\r\n        android:background=\"@color/tlo_polaTekstowe\"\r\n        android:padding=\"10dp\"\r\n        app:layout_constraintEnd_toEndOf=\"@+id/nazwa_aplikacji\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/nazwa_aplikacji\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/nazwa_aplikacji\" />\r\n\r\n    <EditText\r\n        android:id=\"@+id/Haslo_Logowanie\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"16dp\"\r\n        android:ems=\"10\"\r\n        android:hint=\"@string/haslo\"\r\n        android:inputType=\"textPassword\"\r\n        android:textSize=\"24sp\"\r\n        android:background=\"@color/tlo_polaTekstowe\"\r\n        android:padding=\"10dp\"\r\n        app:layout_constraintEnd_toEndOf=\"@+id/Email_Logowanie\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/Email_Logowanie\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/Email_Logowanie\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/zaloguj_Logowanie\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"32dp\"\r\n        android:backgroundTint=\"@color/tlo_przycisk\"\r\n        android:fontFamily=\"serif\"\r\n        android:text=\"@string/zaloguj\"\r\n        android:textSize=\"24sp\"\r\n        android:textStyle=\"bold\"\r\n        android:onClick=\"logowanie\"\r\n        app:layout_constraintEnd_toEndOf=\"@+id/Haslo_Logowanie\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/Haslo_Logowanie\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/Haslo_Logowanie\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/zarejestruj_Logowanie\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"8dp\"\r\n        android:backgroundTint=\"@color/tlo_przycisk\"\r\n        android:fontFamily=\"serif\"\r\n        android:text=\"@string/rejestracja\"\r\n        android:textSize=\"24sp\"\r\n        android:textStyle=\"bold\"\r\n        app:layout_constraintEnd_toEndOf=\"@+id/zaloguj_Logowanie\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/zaloguj_Logowanie\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/zaloguj_Logowanie\" />\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_logowanie.xml b/app/src/main/res/layout/activity_logowanie.xml
--- a/app/src/main/res/layout/activity_logowanie.xml	(revision 61ab3ed07484b71ae11425dfc2812d8a1a8c92e6)
+++ b/app/src/main/res/layout/activity_logowanie.xml	(date 1711295683909)
@@ -17,7 +17,6 @@
         android:fontFamily="monospace"
         android:text="@string/powitanie"
         android:textSize="20sp"
-
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toTopOf="parent" />
Index: app/src/main/java/com/example/studysorter/Logowanie.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.studysorter\r\n\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.View\r\nimport android.widget.Button\r\nimport android.widget.TextView\r\nimport android.widget.Toast\r\nimport androidx.activity.enableEdgeToEdge\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.core.view.ViewCompat\r\nimport androidx.core.view.WindowInsetsCompat\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport java.net.Authenticator\r\n\r\n\r\nclass Logowanie : AppCompatActivity() {\r\n    private val AuthInst: FirebaseAuth = FirebaseAuth.getInstance()\r\n\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        enableEdgeToEdge()\r\n        setContentView(R.layout.activity_logowanie)\r\n        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main)) { v, insets ->\r\n            val systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars())\r\n            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom)\r\n            insets\r\n        }\r\n\r\n        findViewById<Button>(R.id.zarejestruj_Logowanie).setOnClickListener(object : View.OnClickListener{\r\n            override fun onClick(v: View?) {\r\n                startActivity(Intent(applicationContext, Rejestracja::class.java))\r\n            }\r\n        })\r\n    }\r\n    /*\r\n    Todo(\"dodanie przycisku wylogowania gdzies\")\r\n    override fun onStart() { //od razu przerzuca na MainActivity w przypadku gdzie urzydkownik jest już zalogowany\r\n        super.onStart()\r\n        AuthInst.currentUser?.let { auth -> //jeśli null to się nie wykona\r\n            intent = Intent(this, MainActivity::class.java).apply {\r\n                flags = (Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK)//wyczyszczenie tej aktywności czyli że nie można się tu cofnąć\r\n            }\r\n            startActivity(intent)\r\n        }\r\n    }\r\n    */\r\n    fun logowanie(view: View) {//pobiera maila i haslo i loguje osobe na razie bez sprawdzania czegokolwiek procz pustego\r\n        val email: String = findViewById<TextView>(R.id.Email_Logowanie).text.toString()\r\n        val haslo: String = findViewById<TextView>(R.id.Haslo_Logowanie).text.toString()\r\n        if (email.isNotEmpty() && haslo.isNotEmpty()) {\r\n            AuthInst.signInWithEmailAndPassword(email, haslo)\r\n                .addOnSuccessListener {\r\n                intent = Intent(this, MainActivity::class.java).apply {\r\n                            flags =(Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK)//wyczyszczenie tej aktywności czyli że nie można się tu cofnąć\r\n                        }\r\n                    startActivity(intent)\r\n                }\r\n                .addOnFailureListener{\r\n                    Log.d(\"LOG_DEBUD_LOGOWANIE\",it.message.toString())\r\n                    Toast.makeText(this,it.message.toString(), Toast.LENGTH_LONG).show()\r\n                }\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/studysorter/Logowanie.kt b/app/src/main/java/com/example/studysorter/Logowanie.kt
--- a/app/src/main/java/com/example/studysorter/Logowanie.kt	(revision 61ab3ed07484b71ae11425dfc2812d8a1a8c92e6)
+++ b/app/src/main/java/com/example/studysorter/Logowanie.kt	(date 1711326555558)
@@ -1,18 +1,32 @@
 package com.example.studysorter
 
-import android.content.Intent
 import android.os.Bundle
-import android.util.Log
-import android.view.View
-import android.widget.Button
-import android.widget.TextView
-import android.widget.Toast
-import androidx.activity.enableEdgeToEdge
+import androidx.activity.compose.setContent
 import androidx.appcompat.app.AppCompatActivity
-import androidx.core.view.ViewCompat
-import androidx.core.view.WindowInsetsCompat
+import androidx.compose.foundation.layout.*
+import androidx.compose.ui.unit.*
+import androidx.compose.material3.*
+import androidx.compose.foundation.text.KeyboardOptions
+import androidx.compose.material.icons.Icons
+import androidx.compose.material.icons.outlined.*
+import androidx.compose.runtime.Composable
+import androidx.compose.runtime.getValue
+import androidx.compose.runtime.mutableStateOf
+import androidx.compose.runtime.remember
+import androidx.compose.runtime.saveable.rememberSaveable
+import androidx.compose.runtime.setValue
+import androidx.compose.ui.Alignment
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.res.colorResource
+import androidx.compose.ui.res.stringResource
+import androidx.compose.ui.text.font.FontFamily
+import androidx.compose.ui.text.input.KeyboardType
+import androidx.compose.ui.text.input.PasswordVisualTransformation
+import androidx.compose.ui.text.input.TextFieldValue
+import androidx.compose.ui.text.input.VisualTransformation
+import androidx.compose.ui.tooling.preview.Preview
+import com.example.studysorter.ui.theme.StudySorterTheme
 import com.google.firebase.auth.FirebaseAuth
-import java.net.Authenticator
 
 
 class Logowanie : AppCompatActivity() {
@@ -21,19 +35,25 @@
 
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
-        enableEdgeToEdge()
-        setContentView(R.layout.activity_logowanie)
-        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main)) { v, insets ->
-            val systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars())
-            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom)
-            insets
+        //setContentView(R.layout.activity_logowanie)
+        setContent{
+            StudySorterTheme {
+                Surface(
+                    color = colorResource(id = R.color.tlo_aplikacja),
+                    modifier = Modifier.fillMaxSize()
+                ){
+                    Zaloguj()
+                }
+            }
         }
-
+        /*
         findViewById<Button>(R.id.zarejestruj_Logowanie).setOnClickListener(object : View.OnClickListener{
             override fun onClick(v: View?) {
                 startActivity(Intent(applicationContext, Rejestracja::class.java))
             }
         })
+
+         */
     }
     /*
     Todo("dodanie przycisku wylogowania gdzies")
@@ -46,7 +66,6 @@
             startActivity(intent)
         }
     }
-    */
     fun logowanie(view: View) {//pobiera maila i haslo i loguje osobe na razie bez sprawdzania czegokolwiek procz pustego
         val email: String = findViewById<TextView>(R.id.Email_Logowanie).text.toString()
         val haslo: String = findViewById<TextView>(R.id.Haslo_Logowanie).text.toString()
@@ -64,4 +83,91 @@
                 }
         }
     }
-}
\ No newline at end of file
+    */
+
+}
+
+@Preview(showBackground = true)
+@Composable
+fun Zaloguj(){
+    var hasloWidocznosc by rememberSaveable { mutableStateOf(false) }
+    var mail by remember { mutableStateOf("")}
+    var haslo by remember { mutableStateOf("")}
+    Column(
+        horizontalAlignment = Alignment.CenterHorizontally,
+        verticalArrangement = Arrangement.Center,
+        modifier = Modifier.wrapContentHeight()
+    ) {
+        Box{
+            Text(stringResource(R.string.powitanie), fontFamily = FontFamily.Monospace, fontSize = 20.sp)
+        }
+        Box{
+            Text(stringResource(R.string.app_name), fontFamily = FontFamily.Monospace, fontSize = 20.sp)
+        }
+        Box() {
+                 OutlinedTextField(
+                     value = mail,
+                     onValueChange = { mail = it },
+                     modifier = Modifier.padding(top = 50.dp),
+                     singleLine = true,
+                     placeholder = { Text(text = stringResource(id = R.string.mail)) },
+                     leadingIcon = {
+                         Icon(
+                             imageVector = Icons.Outlined.Email,
+                             contentDescription = "Email icon",
+                         )
+                     },
+                     keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Email),
+                     colors = TextFieldDefaults.colors(
+                        unfocusedContainerColor = colorResource(id = R.color.tlo_polaTekstowe),
+                         focusedContainerColor = colorResource(id = R.color.tlo_polaTekstowe),
+                     )
+                 )
+        }
+        Box{
+            OutlinedTextField(
+                value = haslo,
+                onValueChange = { haslo = it },
+                modifier = Modifier.padding(25.dp),
+                singleLine = true,
+                placeholder = { Text(text = stringResource(id = R.string.haslo)) },
+                leadingIcon = {
+                    Icon(
+                        imageVector = Icons.Outlined.Lock,
+                        contentDescription = "hasło icon",
+                    )
+                },
+                keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Password),
+                visualTransformation = if (hasloWidocznosc) VisualTransformation.None else PasswordVisualTransformation(),
+                colors = TextFieldDefaults.colors(
+                    unfocusedContainerColor = colorResource(id = R.color.tlo_polaTekstowe),
+                    focusedContainerColor = colorResource(id = R.color.tlo_polaTekstowe),
+                ),
+                trailingIcon = {
+                    val image = if (hasloWidocznosc)
+                        Icons.Outlined.Visibility
+                    else Icons.Outlined.VisibilityOff
+
+                    // Please provide localized description for accessibility services
+                    val description = if (hasloWidocznosc) "Hide password" else "Show password"
+
+                    IconButton(onClick = {hasloWidocznosc = !hasloWidocznosc}){
+                        Icon(imageVector  = image, description)
+                    }
+                }
+            )
+        }
+        Button(
+            onClick = { /*TODO(skopoiowanie tego co było)*/ },
+            Modifier
+                .width(OutlinedTextFieldDefaults.MinWidth)
+                .height(OutlinedTextFieldDefaults.MinHeight - 10.dp),
+            colors = ButtonDefaults.buttonColors(containerColor = colorResource(id = R.color.tlo_przycisk))
+
+            ) {
+            Text(stringResource(id = R.string.zaloguj))
+        }
+
+
+    }
+}
